#!/usr/bin/env python3
"""
üóÇÔ∏è –ú–ï–ù–ï–î–ñ–ï–† –ß–ê–¢–û–í - –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ú–¨–Æ–¢–ò–†–û–í–ê–ù–ò–ï –ò –ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï
–°–∫—Ä—ã–≤–∞–µ—Ç —á–∞—Ç—ã —Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è–º–∏ —Ä–∞—Å—Å—ã–ª–∫–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
"""
import asyncio
import json
from telethon import TelegramClient
from telethon.tl.functions.account import UpdateNotifySettingsRequest
from telethon.tl.functions.folders import EditPeerFoldersRequest
from telethon.tl.functions.messages import SetHistoryTTLRequest
from telethon.tl.types import InputNotifyPeer, InputPeerNotifySettings, InputFolderPeer

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
with open('config.json', 'r') as f:
    cfg = json.load(f)

class ChatManager:
    """üóÇÔ∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è —á–∞—Ç–æ–≤"""
    
    def __init__(self, client):
        self.client = client
        self.auto_delete_delay = 4  # –ó–∞–¥–µ—Ä–∂–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (3-5 —Å–µ–∫)
    
    async def mute_chat(self, peer, duration=2147483647):
        """üîá –ú—å—é—Ç–∏–º —á–∞—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞–≤—Å–µ–≥–¥–∞)"""
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –º—å—é—Ç–∏–Ω–≥–∞
            await self.client(UpdateNotifySettingsRequest(
                peer=InputNotifyPeer(peer),
                settings=InputPeerNotifySettings(
                    mute_until=duration,
                    sound=None,
                    show_previews=False
                )
            ))
            print(f"‚úÖ –ß–∞—Ç –∑–∞–º—å—é—á–µ–Ω: {peer}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º—å—é—Ç–∏–Ω–≥–∞ —á–∞—Ç–∞ {peer}: {e}")
            print(f"   –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...")
            try:
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ edit_2fa
                entity = await self.client.get_entity(peer)
                await self.client.edit_2fa(entity, mute_until=duration)
                print(f"‚úÖ –ß–∞—Ç –∑–∞–º—å—é—á–µ–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º: {peer}")
                return True
            except:
                print(f"   –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª")
                return False
    
    async def archive_chat(self, peer):
        """üìÇ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —á–∞—Ç (–ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ø–∞–ø–∫—É –∞—Ä—Ö–∏–≤–∞)"""
        try:
            await self.client(EditPeerFoldersRequest(
                folder_peers=[InputFolderPeer(
                    peer=peer,
                    folder_id=1  # 1 = –ê—Ä—Ö–∏–≤
                )]
            ))
            print(f"‚úÖ –ß–∞—Ç –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω: {peer}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞ {peer}: {e}")
            return False
    
    async def hide_chat(self, username_or_id):
        """üëª –ü–æ–ª–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞: –º—å—é—Ç + –∞—Ä—Ö–∏–≤"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º peer –æ–±—ä–µ–∫—Ç
            if isinstance(username_or_id, str) and username_or_id.startswith('@'):
                username_or_id = username_or_id[1:]  # –£–±–∏—Ä–∞–µ–º @
            
            peer = await self.client.get_input_entity(username_or_id)
            
            # –ú—å—é—Ç–∏–º —á–∞—Ç
            muted = await self.mute_chat(peer)
            
            # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —á–∞—Ç  
            archived = await self.archive_chat(peer)
            
            return muted and archived
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ {username_or_id}: {e}")
            return False
    
    async def send_and_hide_message(self, target, message_text):
        """üì§‚û°Ô∏èüóëÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
        try:
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º: {message_text}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sent_message = await self.client.send_message(target, message_text)
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –≤ —Ñ–æ–Ω–µ
            asyncio.create_task(self._delayed_delete(sent_message))
            
            return sent_message
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return None
    
    async def _delayed_delete(self, message):
        """üïêüóëÔ∏è –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¢–û–õ–¨–ö–û –£ –°–ï–ë–Ø"""
        try:
            print(f"‚è≥ –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {self.auto_delete_delay} —Å–µ–∫—É–Ω–¥...")
            await asyncio.sleep(self.auto_delete_delay)
            
            # revoke=False - —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —É —Å–µ–±—è, –ø–æ–ª—É—á–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.delete(revoke=False)
            print(f"üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ —É –Ω–∞—Å (–ø–æ–ª—É—á–∞—Ç–µ–ª—å –µ–≥–æ –≤–∏–¥–∏—Ç)")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False
    
    async def send_hide_and_mute(self, target, message_text):
        """üéØ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å ‚Üí —É–¥–∞–ª–∏—Ç—å ‚Üí —Å–∫—Ä—ã—Ç—å —á–∞—Ç"""
        print(f"\nüéØ –ü–û–õ–ù–´–ô –¶–ò–ö–õ –î–õ–Ø {target}")
        print("-" * 30)
        
        # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        sent_message = await self.send_and_hide_message(target, message_text)
        if not sent_message:
            return False
        
        # 2. –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º —á–∞—Ç–∞
        await asyncio.sleep(1)
        
        # 3. –°–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç (TTL —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ main.py –î–û –æ—Ç–ø—Ä–∞–≤–∫–∏)
        hidden = await self.hide_chat(target)
        
        if hidden:
            print(f"‚úÖ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω –¥–ª—è {target}")
            print(f"   üì§ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            print(f"   üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 4 —Å–µ–∫")
            print(f"   üîá –ß–∞—Ç –∑–∞–º—å—é—á–µ–Ω")
            print(f"   üìÇ –ß–∞—Ç –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω")
        else:
            print(f"‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ —á–∞—Ç –Ω–µ —Å–∫—Ä—ã—Ç")
        
        return hidden
    
    async def delete_incoming_message(self, message):
        """üóëÔ∏è –£–¥–∞–ª—è–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —É —Å–µ–±—è"""
        try:
            await message.delete(revoke=False)
            print(f"üóëÔ∏è –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ —É –Ω–∞—Å")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False
    
    async def set_auto_delete_1_month(self, peer):
        """‚è∞ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ 1 –º–µ—Å—è—Ü"""
        try:
            # TTL = 2592000 —Å–µ–∫—É–Ω–¥ = 30 –¥–Ω–µ–π = 1 –º–µ—Å—è—Ü
            await self.client(SetHistoryTTLRequest(
                peer=peer,
                period=2592000  # 1 –º–µ—Å—è—Ü –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            ))
            print(f"‚è∞ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–µ—Å—è—Ü: {peer}")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è: {e}")
            return False

async def auto_hide_targets():
    """üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–∞—Ç—ã —Å —Ü–µ–ª–µ–≤—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    
    print("üóÇÔ∏è –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–ö–†–´–¢–ò–ï –ß–ê–¢–û–í")
    print("=" * 50)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Å—Å–∏–∏
    client = TelegramClient('sessions/186418724_telethon', cfg['api_id'], cfg['api_hash'])
    
    async with client:
        me = await client.get_me()
        print(f"üîê –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫: {me.first_name} ({me.phone})")
        
        chat_manager = ChatManager(client)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            with open(cfg['target_users_file'], 'r') as f:
                target_users = [line.strip() for line in f if line.strip()]
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª {cfg['target_users_file']} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        print(f"üéØ –¶–µ–ª–µ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(target_users)}")
        print(f"üìù –°–ø–∏—Å–æ–∫: {', '.join(target_users)}")
        print()
        
        # –°–∫—Ä—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —á–∞—Ç
        hidden_count = 0
        for user in target_users:
            print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {user}")
            
            if await chat_manager.hide_chat(user):
                hidden_count += 1
                print(f"   ‚úÖ –°–∫—Ä—ã—Ç —É—Å–ø–µ—à–Ω–æ!")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫—Ä—ã—Ç—å")
            print()
            
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
            await asyncio.sleep(1)
        
        print(f"üìä –ò–¢–û–ì–û:")
        print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(target_users)}")
        print(f"   –°–∫—Ä—ã—Ç–æ —É—Å–ø–µ—à–Ω–æ: {hidden_count}")
        print(f"   –û—à–∏–±–æ–∫: {len(target_users) - hidden_count}")
        print()
        print(f"‚ú® –ß–∞—Ç—ã —Å–∫—Ä—ã—Ç—ã, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç!")

async def test_hidden_message_reception():
    """üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö —á–∞—Ç–æ–≤"""
    
    print("üß™ –¢–ï–°–¢ –ü–û–õ–£–ß–ï–ù–ò–Ø –°–û–û–ë–©–ï–ù–ò–ô –ò–ó –°–ö–†–´–¢–´–• –ß–ê–¢–û–í")
    print("=" * 50)
    
    client = TelegramClient('sessions/186418724_telethon', cfg['api_id'], cfg['api_hash'])
    
    async with client:
        me = await client.get_me()
        print(f"üîê –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫: {me.first_name} ({me.phone})")
        print(f"üì° –°–ª—É—à–∞–µ–º –í–°–ï –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–≤–∫–ª—é—á–∞—è –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö —á–∞—Ç–æ–≤)...")
        
        from telethon import events
        
        @client.on(events.NewMessage(incoming=True))
        async def hidden_message_test(event):
            sender = await event.get_sender()
            text = event.raw_text
            
            print(f"\nüì© [–ü–û–õ–£–ß–ï–ù–û] –°–æ–æ–±—â–µ–Ω–∏–µ:")
            print(f"   üë§ –û—Ç: {getattr(sender, 'first_name', 'Unknown')}")
            print(f"   üì± Username: @{getattr(sender, 'username', 'None')}")
            print(f"   üìù –¢–µ–∫—Å—Ç: {text}")
            print(f"   üóÇÔ∏è –°—Ç–∞—Ç—É—Å —á–∞—Ç–∞: –í–æ–∑–º–æ–∂–Ω–æ —Å–∫—Ä—ã—Ç, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!")
        
        await client.run_until_disconnected()

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        if sys.argv[1] == "hide":
            asyncio.run(auto_hide_targets())
        elif sys.argv[1] == "test":
            asyncio.run(test_hidden_message_reception())
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python3 chat_manager.py hide  - –°–∫—Ä—ã—Ç—å —á–∞—Ç—ã —Å —Ü–µ–ª–µ–≤—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
            print("  python3 chat_manager.py test  - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    else:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 chat_manager.py hide  - –°–∫—Ä—ã—Ç—å —á–∞—Ç—ã —Å —Ü–µ–ª–µ–≤—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏") 
        print("  python3 chat_manager.py test  - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
